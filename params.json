{"name":"ExSponge","tagline":"An HTML / Rich Text / WYSIWYG / Microsoft Word cleanup and filtering plugin for ExpressionEngine","body":"**This plugin cleans up the mess your clients leave behind!**\r\n\r\nWhether your content was entered via WYSIWYG (Rich Text) editors (such as TinyMCE, CKEditor, FCKEditor, Expresso, Wyvern, Wygwam, Blogger's online editor, and ExpressionEngine's own built-in Rich Text Editor), pasted in from Microsoft Word or Adobe InDesign, or bulk-imported from XML or another CMS, ExSponge leaves it properly formatted and free of layout-breaking cruft.\r\n\r\nIt will also optionally remove all tags, or keep only the tags you want. And you can even trim the fully filtered, cruft-free content down to a specified number of paragraphs.\r\n\r\nThis plugin is for developers who want neatly formatted paragraphs with minimal, semantic styling, and who do not want the proprietary tags and unnecessary parameters inserted by word processors (or the \"tag soup\" unwittingly generated by clients) compromising their layout.\r\n\r\nAlthough undoubtedly less thorough than HTML TIDY or HTML Purifier, it is also more efficient, easier to set up, and focused on the specific problems you will likely encounter if you give your clients a WYSIWG field with which to edit their channel entries. In my worst-case scenario (a Microsoft Word document exported to HTML and pasted into an EE Rich Text field), ExSponge reduced the data size by 97% without any loss in content.\r\n\r\n**Some of what is removed by default:**\r\n\r\n* Word document garbage (including comments, proprietary styles, irrelevant formatting tags, etc.)\r\n* Empty tag pairs (including empty paragraphs)\r\n* Unnecessary or layout-breaking tags (html, iframe, head, style, center, form, object, etc.)\r\n* Unnecessary parameters within tags (unless otherwise specified)\r\n* Classes and styles within tags (unless otherwise specified)\r\n* Non-printing and control characters\r\n* Carriage returns and linefeeds\r\n* Extra whitespace\r\n* Anchor links\r\n* Empty lines\r\n* JavaScript\r\n* XML\r\n\r\nIn addition, special HTML entities are converted to their ASCII equivalents, special Word characters are converted to UTF-8, and non-breaking spaces (&nbsp;) are converted to normal spaces. Paragraph formatting is given special attention, and missing paragraph start and end tags are inserted where needed.\r\n\r\nThe final output will be compact, tidy, and ready to use in your layout.\r\n\r\n## Installation\r\n\r\nPlace the \"ex_sponge\" folder in your \"system/expressionengine/third_party\" folder.\r\n\r\n## Parameters\r\n\r\n_All parameters are optional:_\r\n\r\n*__allow_breaks__* - Allow `<br>` tags to remain as-is *(\"yes\")*, or convert double-breaks (`<br><br>`) to paragraphs while leaving single breaks alone *(\"single\")*, or consolidate all breaks into paragraphs *(\"no\")*.  _(Default = \"no\")_\r\n\r\n*__allow_parameters__* - Allow tag parameters to remain *(\"yes\")*, strip all but the most necessary *(\"no\", which is the equivalent of \"alt&#124;href&#124;src&#124;title\")*, or strip all parameters except the ones you list.  _(Default = \"no\")_\r\n\r\n*__allow_styles__* - Allow class and style parameters to remain *(\"yes\")*, or explicitly remove them *(\"no\")*.  _(Default = \"no\")_\r\n\r\n*__allow_tags__* - Remove all HTML tags from the text and leave only raw, unformatted text *(\"no\")*, or remove most tags but keep the most useful and safe ( *\"safe\"*, which is the equivalent of *\"&lt;a&gt;&lt;i&gt;&lt;em&gt;&lt;strong&gt;&lt;cite&gt;&lt;code&gt;&lt;ul&gt;&lt;ol&gt;&lt;li&gt;&lt;dl&gt;&lt;dt&gt;&lt;dd&gt;&lt;img&gt;&lt;h1&gt;&lt;h2&gt;&lt;h3&gt;&lt;h4&gt;&lt;h5&gt;&lt;h6&gt;&lt;br&gt;&lt;p&gt;&lt;b&gt;&lt;blockquote&gt;\"*), or strip all tags except the ones you list.  _(Default = \"safe\")_\r\n\r\n*__convert_tags__* - Convert presentational tags `<i>` and `<b>` to the semantic `<em>` and `<strong>` *(\"yes\")*, or leave them as-is *(\"no\")*.  _(Default = \"yes\")_\r\n\r\n*__paragraphs__* - Clip the text after a specified number of paragraphs. Any positive number *(\"1\", \"4\", \"9999\")* will cause the text to be trimmed. *\"-1\"* will not clip the text at all.  _(Default = \"-1\")__\r\n\r\n\r\n## Usage\r\n\r\nTo use this plugin, simply wrap the text you want processed between these tag pairs:\r\n\r\n    {exp:ex_sponge}\r\n        ( your mess goes here )\r\n    {/exp:ex_sponge}\r\n\r\nIn my templates, I typically wrap the above tag (with no parameters) around the output of any Rich Text or WYSIWYG field the client is allowed to edit.\r\n\r\nA more complex example:\r\n\r\n    {exp:ex_sponge allow_breaks=\"single\" paragraphs=\"4\"\r\n     allow_tags=\"<p><strong><em><ul><li>\"}\r\n        ( your mess goes here )\r\n    {/exp:ex_sponge}\r\n\r\n\r\n## License\r\n\r\nLicensed under a Creative Commons Attribution-ShareAlike 3.0 Unported License\r\nhttp://creativecommons.org/licenses/by-sa/3.0/us/\r\n\r\n## Contact\r\n\r\n* Email: info@fcgrx.com\r\n\r\n## Support / Feature Requests\r\n\r\nThis project is an active part of all my ExpressionEngine installations, and I'd like to keep it as fast, full-featured and bulletproof as possible. \r\n\r\nHave a bug? Feature request? Please create an issue on GitHub at https://github.com/fcgrx/ex_sponge/issues\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}